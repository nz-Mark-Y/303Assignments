@HVLayout
scchart compsys303_a2 {

input signal VSense, ASense, AVITO, PVARPTO, LRITO, VRPTO, AEITO, URITO;
output signal VPace, APace;

    initial state top{
      signal LRI_start, LRI_ex, LRI_stop;
      signal VRP_start, VRP_ex, VRP_stop;
      signal AVI_start, AVI_ex, AVI_stop;
      signal PVARP_start, PVARP_ex, PVARP_stop;
      signal AEI_start, AEI_ex, AEI_stop;
      signal URI_start, URI_ex, URI_stop;

      region LRI:
      initial state init --> commit1 with VSense
      --> commit1 with VPace;
      connector state commit1 --> waitVRP immediate with /LRI_start;
      state waitVRP --> waitLRI with VRP_ex;
      state waitLRI "waitLRI" --> commit2 with VSense
      --> commit2 with VPace
      --> commit3 with LRI_ex;
      connector state commit2 --> intState immediate with /LRI_stop;
      connector state commit3 --> intState immediate with /VPace;
      state intState --> waitVRP with /LRI_start;

      region LRI_timer:
      initial state idle --> timer with LRI_start;
      state timer "timer"--> idle with LRI_stop
      --> idle with LRITO/ LRI_ex;

      region VRP:
      initial state idle --> commit1 with VSense
      --> commit1 with VPace;
      connector state commit1 --> waitVRP immediate with /VRP_start;
      state waitVRP --> idle with VRP_ex
      --> waitVRP with VSense;

      region VRP_timer:
      initial state idle --> timer with VRP_start;
      state timer "timer"--> idle with VRPTO/VRP_ex;
      
      region AVI:
      initial state init --> commit1 with ASense;
      connector state commit1 --> waitAVI2 immediate with /AVI_start;
      state waitAVI2 "waitAVI2" --> waitPVARP with AVI_ex/VPace;
      state waitPVARP --> waitASense with PVARP_ex; 
      state waitASense --> commit4 with ASense;
      connector state commit4 --> waitAVI immediate with /AVI_start;
      state waitAVI "waitAVI" --> commit2 with VSense
      --> commit2 with VPace
      --> waitURI with AVI_ex;
      connector state commit2 --> waitPVARP immediate with /AVI_stop;
      state waitURI "waitURI" --> commit3 with URI_ex;
      connector state commit3 --> waitPVARP immediate with /VPace;
      
      region AVI_timer:
      initial state idle --> timer with AVI_start;
      state timer "timer"--> idle with AVI_stop
      --> idle with AVITO/AVI_ex;
      
      region PVARP_timer:
      initial state idle --> timer with PVARP_start;
      state timer "timer"--> idle with PVARPTO/PVARP_ex;
      
      region PVARP:
      initial state idle --> commit1 with VSense
      --> commit1 with VPace;
      connector state commit1 --> waitPVARP immediate with /PVARP_start;
      state waitPVARP --> idle with PVARP_ex
      --> waitPVARP with ASense;
      
      region AEI_timer:
      initial state idle --> timer with AEI_start;
      state timer "timer"--> idle with AEI_stop
      --> idle with AEITO/ AEI_ex;
      
      region AEI:
      initial state init --> commit1 with VSense
      --> commit1 with VPace;
      connector state commit1 --> waitPVARP immediate with /AEI_start;
      state waitPVARP --> waitAEI with PVARP_ex;
      state waitAEI "waitAEI" --> commit2 with ASense
      --> commit3 with AEI_ex;
      connector state commit2 --> intState immediate with /AEI_stop;
      connector state commit3 --> intState immediate with /APace;
      state intState "intState"--> commit4 with VSense 
      --> commit4 with VPace;
      connector state commit4 --> waitPVARP immediate with /AEI_start;
     
      region URI_timer:
      initial state idle --> timer with URI_start;
      state timer "timer" --> idle with URI_stop
      --> idle with URITO/ URI_ex;
      
      region URI:
      initial state init --> commit1 with VSense
      --> commit1 with VPace;
      connector state commit1 --> waitURI immediate with /URI_start;
      state waitURI "waitURI" --> intState with URI_ex;
      state intState "intState"--> commit2 with VSense 
      --> commit2 with VPace;
      connector state commit2 --> waitURI immediate with /URI_start;
      
    };
}